/**
 * Script para atualizar o segundo m√≥dulo duplicado
 */

import { createClient } from '@supabase/supabase-js';
import { config } from 'dotenv';

// Carregar vari√°veis de ambiente
config();

// Configura√ß√£o do Supabase com service role
const supabaseUrl = process.env.VITE_SUPABASE_URL;
const serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl || !serviceRoleKey) {
  console.error('‚ùå Vari√°veis de ambiente do Supabase n√£o encontradas');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, serviceRoleKey);

async function updateSecondModule() {
  console.log('üîß Atualizando segundo m√≥dulo (Curso de Ciberseguran√ßa)...');
  
  try {
    const moduleId = '4061b636-3e2e-418b-81be-10b5b3b1c8ba';
    
    const newContent = {
      html: `
        <h2>Avalia√ß√£o Final - Ciberseguran√ßa</h2>
        <p>Parab√©ns por chegar at√© aqui! Esta √© sua avalia√ß√£o final do curso de Ciberseguran√ßa.</p>
        
        <h3>üìã Instru√ß√µes da Prova</h3>
        <ul>
          <li>Esta avalia√ß√£o cont√©m quest√µes sobre todos os m√≥dulos estudados</li>
          <li>Voc√™ ter√° tempo suficiente para responder com calma</li>
          <li>Leia cada quest√£o com aten√ß√£o antes de responder</li>
          <li>√â necess√°rio obter pelo menos 70% de acertos para aprova√ß√£o</li>
        </ul>
        
        <h3>üéØ Temas Abordados</h3>
        <ul>
          <li><strong>Introdu√ß√£o √† Ciberseguran√ßa:</strong> Conceitos fundamentais e import√¢ncia</li>
          <li><strong>Tipos de Amea√ßas:</strong> Malware, phishing, ataques DDoS e outros</li>
          <li><strong>Pr√°ticas de Prote√ß√£o:</strong> Senhas seguras, autentica√ß√£o e criptografia</li>
          <li><strong>Seguran√ßa em Redes:</strong> Firewalls, VPNs e monitoramento</li>
          <li><strong>Legisla√ß√£o e Compliance:</strong> LGPD, GDPR e normas de seguran√ßa</li>
          <li><strong>Resposta a Incidentes:</strong> Detec√ß√£o, conten√ß√£o e recupera√ß√£o</li>
          <li><strong>Futuro da Ciberseguran√ßa:</strong> Tend√™ncias e tecnologias emergentes</li>
        </ul>
        
        <h3>‚úÖ Ap√≥s a Conclus√£o</h3>
        <p>Ao finalizar esta avalia√ß√£o com sucesso, voc√™ receber√°:</p>
        <ul>
          <li>Certificado de conclus√£o do curso</li>
          <li>Badge de especialista em Ciberseguran√ßa</li>
          <li>Acesso a materiais complementares</li>
        </ul>
        
        <div style="background-color: #f0f9ff; padding: 15px; border-radius: 8px; margin: 20px 0;">
          <p><strong>üí° Dica:</strong> Revise os conceitos principais de cada m√≥dulo antes de iniciar a prova. Boa sorte!</p>
        </div>
      `,
      summary: 'Avalia√ß√£o final do curso de Ciberseguran√ßa',
      lastUpdated: new Date().toISOString(),
      migrationNote: 'Conte√∫do corrigido - migra√ß√£o TinyMCE para Tiptap'
    };
    
    const { data, error } = await supabase
      .from('modules')
      .update({
        title: 'Avalia√ß√£o Final - Ciberseguran√ßa',
        content_jsonb: newContent,
        updated_at: new Date().toISOString()
      })
      .eq('id', moduleId)
      .select();
    
    if (error) {
      console.error('‚ùå Erro na atualiza√ß√£o:', error.message);
      return;
    }
    
    console.log('‚úÖ Segundo m√≥dulo atualizado com sucesso!');
    console.log(`üìù T√≠tulo: ${data[0].title}`);
    console.log(`üìÑ Conte√∫do: ${data[0].content_jsonb.html.length} caracteres`);
    
    // Verificar se agora n√£o h√° mais duplica√ß√£o
    console.log('\nüîç Verificando se a duplica√ß√£o foi resolvida...');
    
    const { data: bothModules, error: verifyError } = await supabase
      .from('modules')
      .select(`
        id,
        title,
        content_jsonb,
        courses!inner(
          title
        )
      `)
      .in('id', [
        '4061b636-3e2e-418b-81be-10b5b3b1c8ba',
        'a313a0d4-d1e6-4617-bef8-cf1b2aa4d702'
      ]);
    
    if (verifyError) {
      console.error('‚ùå Erro na verifica√ß√£o:', verifyError.message);
      return;
    }
    
    console.log('\nüìä ESTADO FINAL DOS M√ìDULOS:');
    bothModules.forEach(module => {
      console.log(`\n   üìñ ${module.courses.title}:`);
      console.log(`      T√≠tulo: ${module.title}`);
      console.log(`      Conte√∫do: ${module.content_jsonb.html.length} caracteres`);
      console.log(`      √öltima atualiza√ß√£o: ${module.content_jsonb.lastUpdated}`);
    });
    
    // Verificar duplica√ß√£o
    const contents = bothModules.map(m => JSON.stringify(m.content_jsonb));
    const hasDuplication = contents.length !== new Set(contents).size;
    
    console.log(`\nüîÑ Status da duplica√ß√£o: ${hasDuplication ? '‚ùå Ainda existe' : '‚úÖ Resolvida'}`);
    
    if (!hasDuplication) {
      console.log('\nüéâ SUCESSO! Problema de conte√∫do duplicado foi corrigido!');
    }
    
  } catch (error) {
    console.error('‚ùå Erro geral:', error.message);
  }
}

// Executar atualiza√ß√£o
updateSecondModule().catch(console.error);